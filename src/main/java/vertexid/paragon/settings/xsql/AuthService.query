<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AuthService">

	<select id="getAuthGroupList" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthGroupList][권한그룹 목록 조회][Kim Jin Ho][2016-09-13] */
				CODE_CD value
			,	CODE_NM name
		  FROM TB_PARAGON_COMM_CODE
		 WHERE DEL_YN ='N'
		 AND	CODE_GROUP_CD = 'GR0001'
		 ORDER BY CODE_CD 
	</select> 
	<select id="getAuthCheckList" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthCheckList][사용자 프로그램별 버튼 권한체크 목록][Kim Jin Ho][2016-09-13] */ 
			   CODE_CD AS AUTH_CD
         	 , IFNULL(PA.AUTH_YN,'N') AUTH_YN
		  FROM TB_PARAGON_COMM_CODE PCC
      	  LEFT OUTER JOIN TB_PARAGON_AUTH PA
        	ON PCC.CODE_CD = PA.AUTH_CD
       	   AND PA.AUTH_GROUP_SEQ = (SELECT AUTH_GROUP_SEQ
                                      FROM TB_PARAGON_AUTH_USER
                                     WHERE USER_ID = #{s_userId}
                                       AND DEL_YN = 'N'
           )
      	   AND  PA.MENU_SEQ = (SELECT MENU_SEQ
                                FROM TB_PARAGON_MENU
                               WHERE PRO_CD =  #{s_proCd}
                                 AND DEL_YN = 'N'
           )
		 WHERE CODE_GROUP_CD ='SC0014'
		   AND DEL_YN='N'
	</select> 
	<select id="getAuthCheckMenu" resultType="String" >
		SELECT  /* [AuthService.query][getAuthCheckMenu][메뉴 권한체크][Kim Jin Ho][2016-09-13] */
			   IFNULL(PA.AUTH_YN,'N') AUTH_YN
		  FROM TB_PARAGON_AUTH PA
		 WHERE PA.AUTH_CD ='AUTH_VIEW'
		   AND PA.AUTH_GROUP_SEQ = (SELECT AUTH_GROUP_SEQ
                                   FROM TB_PARAGON_AUTH_USER
                                  WHERE USER_ID = #{s_userId}
                                    AND DEL_YN = 'N'
		  )
		  AND  PA.MENU_SEQ = (SELECT MENU_SEQ
		                            FROM TB_PARAGON_MENU
		                           WHERE PRO_CD = #{s_proCd}
		                             AND DEL_YN = 'N'
		  )
	</select> 
	<select id="getAuthGroupView" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthGroupList][권한그룹 목록 조회][Kim Jin Ho][2016-09-13] */
			   AUTH_GROUP_SEQ                                    
			 , AUTH_GROUP_NM
			 , AUTH_GROUP_DESC
		  FROM TB_PARAGON_AUTH_GROUP
		 WHERE DEL_YN ='N'
		   AND AUTH_GROUP_SEQ = #{authGroupSeq}
	</select> 
	
	<select id="getAuthUserList" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthUserList][권한유저 목록 조회][Kim Jin Ho][2016-09-13] */
			   UI.USER_ID
			 , UI.USER_NM
			 , FN_COMM_CODE_NM('SC0032', UI.USER_TYPE, #{s_language}) USER_TYPE
		  FROM TB_PARAGON_AUTH_USER AU
      JOIN TB_PARAGON_USER UI
        ON AU.USER_ID = UI.USER_ID
		 WHERE AU.DEL_YN ='N'
		   AND AUTH_GROUP_SEQ = #{authGroupSeq}
		 ORDER BY AUTH_USER_SEQ DESC
	</select> 
	
	<select id="getAuthSearchUserList" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthSearchUserList][미권한자 조회 조회][Kim Jin Ho][2016-09-13] */
			   USER_ID
			 , USER_NM
			 , USER_TYPE
		 FROM(
			SELECT 
				   PU.USER_ID
				 , PU.USER_NM
				 , FN_COMM_CODE_NM('SC0032', PU.USER_TYPE, #{s_language}) USER_TYPE
			  FROM TB_PARAGON_USER PU
		 LEFT JOIN TB_PARAGON_AUTH_USER PAU
				ON PU.USER_ID = PAU.USER_ID
		 LEFT JOIN TB_PARAGON_COMM_CODE CC
				ON CC.CODE_GROUP_CD = 'GR0001'
			   AND CC.CODE_CD = #{authGroupSeq}
			 WHERE PU.DEL_YN ='N'
			   AND CC.CODE_OTHER1 = PU.USER_TYPE
			   AND (PAU.DEL_YN IS NULL OR PAU.DEL_YN !='N')			  
		 ) A
		 <if test="searchWordArr.size != null and searchWordArr.size != 0">
		 WHERE
		 	<foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">USER_NM LIKE '${item}%'</foreach>
		    OR <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">USER_ID LIKE '${item}%'</foreach>
		    OR <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">USER_TYPE LIKE '${item}%'</foreach>
<!-- 		    OR <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">USER_NO LIKE '${item}%'</foreach> -->
<!-- 		    OR <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">USER_POSITION LIKE '%${item}%'</foreach> -->
<!-- 		    OR <foreach collection="searchWordArr" item="item" open="(" separator="OR" close=")">A.USER_ROLE_NM LIKE '%${item}%'</foreach> -->
		 </if>
	  ORDER BY USER_NM 
	</select> 


	<select id="getAuthColunms" resultType="HMap" >
		SELECT /* [AuthService.query][getAuthColunms][권한 컬럼 조회][Kim Jin Ho][2016-09-13] */
			   CODE_CD                                      /*권한 코드*/
			 , 'checkbox' AS CUSTOM_MODE  
		  FROM TB_PARAGON_COMM_CODE
		 WHERE CODE_GROUP_CD ='SC0014'
		   AND DEL_YN='N'
		 ORDER BY CODE_ORDER 
	</select> 
	
	<select id="getMenuAuthList" resultType="HMap" > 
		SELECT /* [AuthService.query][getMenuAuthList][권한 목록 조회][Kim Jin Ho][2016-09-13] */
		       PM.MENU_SEQ                                   /*메뉴코드*/
		     , IFNULL(MENU_PARENT_SEQ,'') MENU_PARENT_SEQ     /*메뉴부모코드*/
		     , AUTH_CD
		     , AUTH_GROUP_SEQ
		     , PRO_CD                                       /*프로그램코드*/
		     , MENU_NM                                    /*메뉴명*/
		     , MENU_ORDER<foreach collection="dt_columns" item="item"  index="idx" >
		     , IFNULL(${item.CODE_CD},'N') ${item.CODE_CD}</foreach>
		     , IN_USER_ID                                   /*작성자*/
		     , IN_DT                                      /*작성일*/
		  FROM TB_PARAGON_MENU PM
		  LEFT OUTER JOIN (
		    SELECT MENU_SEQ
		    	 , AUTH_GROUP_SEQ
		    	 , AUTH_CD<foreach collection="dt_columns" item="item"  index="idx" >
		         , MAX(IF(AUTH_CD = '${item.CODE_CD}', AUTH_YN, NULL)) ${item.CODE_CD}</foreach>
		      FROM TB_PARAGON_AUTH
		     WHERE AUTH_GROUP_SEQ = #{authGroupSeq}
		     GROUP BY MENU_SEQ
		  ) PA
		  ON PM.MENU_SEQ = PA.MENU_SEQ
		 ORDER BY MENU_PARENT_SEQ, MENU_ORDER 
	</select>
	
	<update id="saveMenuAuth" > 
	
		INSERT /* [AuthService.query][saveMenuAuth][권한 메뉴저장][Kim Jin Ho][2016-09-13] */
		  INTO TB_PARAGON_AUTH(
			   AUTH_GROUP_SEQ
			 , MENU_SEQ
			 , AUTH_CD
			 , AUTH_YN
			 , IN_USER_ID
			 , IN_DT
			 , UP_USER_ID
		)
		VALUES
	<foreach collection="dt_save" item="dr_save"  separator=",">
		(
			   #{dr_save.authGroupSeq}
			 , #{dr_save.menuSeq}
			 , #{dr_save.authCd}
			 , #{dr_save.authYn}
			 , #{dr_save.userId}
			 , now()
			 , #{dr_save.userId} 		
		)
	</foreach>
		 ON DUPLICATE KEY UPDATE
<!-- 			   AUTH_YN     = #{authYn} -->
<!-- 			 , UP_USER_ID = #{s_userId} -->
			   AUTH_YN     = VALUES(AUTH_YN)
			 , UP_USER_ID = VALUES(UP_USER_ID)

	</update>
	
	
	<delete id="deleteUserAuth" > 
		DELETE /* [AuthService.query][deleteUserAuth][권한사용자 삭제][Kim Jin Ho][2016-09-13] */ 
		  FROM TB_PARAGON_AUTH_USER
		 WHERE AUTH_GROUP_SEQ = #{authGroupSeq} 
	</delete>
	
	<insert id="insertUserAuth" > 
		INSERT /* [AuthService.query][insertUserAuth][권한사용자 등록][Kim Jin Ho][2016-09-13] */
		  INTO TB_PARAGON_AUTH_USER (
		  		  AUTH_GROUP_SEQ
				, USER_ID
				, UP_USER_ID
				, IN_USER_ID 	
				, IN_DT 		
		  )
		VALUES(	  #{authGroupSeq}
				, #{userId}
				, #{s_userId}
				, #{s_userId}
				, NOW()
		)
	</insert>
	
	<update id="updateAuthGroup" > 
		UPDATE /* [AuthService.query][updateAuthGroup][권한그룹 정보 수정][Kim Jin Ho][2016-09-13] */ 
		       TB_PARAGON_AUTH_GROUP 
		   SET AUTH_GROUP_NM = #{authGroupNm}
		     , AUTH_GROUP_DESC = #{authGroupDesc}
		     , UP_USER_ID = #{s_userId}
		 WHERE AUTH_GROUP_SEQ = #{authGroupSeq}
	</update>
	<insert id="insertAuthGroup" > 
		INSERT /* [AuthService.query][insertAuthGroup][권한그룹 정보 등록][Kim Jin Ho][2016-09-13] */
		  INTO TB_PARAGON_AUTH_GROUP (
		  		  AUTH_GROUP_NM
				, AUTH_GROUP_DESC
				, UP_USER_ID
				, IN_USER_ID 	
				, IN_DT 		
		  )
		VALUES(	  #{authGroupNm}
				, #{authGroupDesc}
				, #{useYn}
				, #{s_userId}
				, NOW()
		)
	</insert>
	
	<delete id="deleteAuthGroup" > 
		UPDATE /* [AuthService.query][updateAuthGroup][권한그룹 정보 수정][Kim Jin Ho][2016-09-13] */ 
		       TB_PARAGON_AUTH_GROUP 
		   SET DEL_YN = 'Y'
		     , UP_USER_ID = #{s_userId}
		 WHERE AUTH_GROUP_SEQ = #{authGroupSeq}
	</delete>
	
</mapper>
 